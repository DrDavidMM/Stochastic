(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    110318,       2081]
NotebookOptionsPosition[    109239,       2057]
NotebookOutlinePosition[    109664,       2074]
CellTagsIndexPosition[    109621,       2071]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"ClearAll", ";"}],
  FontSize->36]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"57729b9e-70df-48a8-871b-d42d9a9617a4"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Funciones", " ", "difusas"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"WLKB1", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{"AKT", " ", 
       RowBox[{"AMPATPratio", "[", "t", "]"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WAMPK", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"LKB1", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"MTORC1", "[", "t", "]"}]}], ")"}]}], ")"}], " ", "+", " ", 
      RowBox[{"(", 
       RowBox[{"CA", " ", 
        RowBox[{"AMPATPratio", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"MTORC1", "[", "t", "]"}]}], ")"}]}], ")"}], "+", " ", 
      RowBox[{"(", 
       RowBox[{"AKT", " ", 
        RowBox[{"AMPATPratio", "[", "t", "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"MTORC1", "[", "t", "]"}]}], ")"}]}], ")"}], " ", "+", 
      RowBox[{"(", "FOXP3", ")"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"LKB1", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"MTORC1", "[", "t", "]"}]}], ")"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"CA", " ", 
         RowBox[{"AMPATPratio", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"MTORC1", "[", "t", "]"}]}], ")"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"AKT", " ", 
         RowBox[{"AMPATPratio", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"MTORC1", "[", "t", "]"}]}], ")"}]}], ")"}], " ", 
       RowBox[{"(", "FOXP3", ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WGlycolysis", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"MTORC1", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"AMPATPratio", "[", "t", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WOXPHOS", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"AMPK", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WAMPATPratio", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Glycolysis", "[", "t", "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"OXPHOS", "[", "t", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WMTORC1", "[", "t_", "]"}], ":=", 
     RowBox[{"MTOR", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"AMPK", "[", "t", "]"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WMTORC2", "[", "t_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"MTOR", " ", 
       RowBox[{"AMPK", "[", "t", "]"}]}], ")"}]}], "  ", ";"}]}]}]], "Input",
 CellChangeTimes->{{3.834701026268773*^9, 3.8347010265365477`*^9}, {
   3.834701089578003*^9, 3.8347010900654616`*^9}, {3.8347011328803596`*^9, 
   3.8347011366733828`*^9}, {3.83470123316199*^9, 3.834701271026138*^9}, {
   3.834701323669968*^9, 3.8347014045760293`*^9}, {3.83470144081087*^9, 
   3.8347014452457733`*^9}, 3.8347018059382505`*^9, {3.8347020792603955`*^9, 
   3.834702090123006*^9}, {3.8347021454100637`*^9, 3.8347021570276904`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"ab0bf766-5b11-4666-940f-8684376a9c30"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Codniciones", " ", "iniciales"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"LKB10", "=", " ", "0."}], ";", " ", 
   RowBox[{"AMPK0", "=", "1."}], ";", " ", 
   RowBox[{"Glycolysis0", "=", "0."}], ";", " ", 
   RowBox[{"OXPHOS0", "=", "0.2"}], ";", " ", 
   RowBox[{"AMPATPratio0", "=", "1."}], ";", " ", 
   RowBox[{"MTORC10", "=", "0."}], ";", " ", 
   RowBox[{"MTORC20", "=", "0."}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8347015104617558`*^9, 3.8347015109207244`*^9}, {
  3.834701618741573*^9, 3.834701621777568*^9}, {3.8347020958324614`*^9, 
  3.8347021178717775`*^9}, {3.834702203062709*^9, 3.834702203578216*^9}, {
  3.8349596222892585`*^9, 3.834959625739843*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"26a03b30-5208-4172-a64b-762253b98d4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Tasas", " ", "de", " ", "decaimiento"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DLKB1", "=", " ", "1."}], ";", " ", 
   RowBox[{"DAMPK", "=", "1."}], ";", " ", 
   RowBox[{"DGlycolysis", "=", "1."}], ";", " ", 
   RowBox[{"DOXPHOS", "=", "1."}], ";", " ", 
   RowBox[{"DAMPATPratio", " ", "=", " ", "1."}], ";", " ", 
   RowBox[{"DMTORC1", "=", "1."}], ";", " ", 
   RowBox[{"DMTORC2", "=", "1."}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8347015523296843`*^9, 3.8347015578456764`*^9}, {
  3.8347016074928703`*^9, 3.8347016076815915`*^9}, {3.8347021226299677`*^9, 
  3.8347021347938085`*^9}, {3.8347022079895473`*^9, 3.834702208223852*^9}, {
  3.834959628092368*^9, 3.834959628586607*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"84f09554-2480-4ad4-9b40-8ef067fba070"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Inputs", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"b", "=", "10"}], ";", "  ", 
   RowBox[{"MTOR", "=", "1"}], ";", " ", 
   RowBox[{"AKT", " ", "=", "1"}], ";", " ", 
   RowBox[{"CA", "=", "1"}], ";", " ", 
   RowBox[{"FOXP3", " ", "=", "0"}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.8347012093772726`*^9, 3.8347012113762693`*^9}, {
   3.834701290499139*^9, 3.834701316583089*^9}, {3.834701407853933*^9, 
   3.8347014212298746`*^9}, 3.8347016426366644`*^9, {3.8347019813608465`*^9, 
   3.8347019816107893`*^9}, {3.8347021619514017`*^9, 3.834702170068572*^9}, {
   3.8349597041303587`*^9, 3.8349597042397623`*^9}, {3.8349597392857666`*^9, 
   3.8349597415883217`*^9}, {3.834959891311946*^9, 3.834959893891209*^9}, {
   3.8351108636106167`*^9, 3.8351108638136716`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6cb272dd-9a5c-45e2-a1bf-c194146cec76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "ODEs", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CORE2", ":=", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"MTORC1", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "b"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"WMTORC1", "[", "t", "]"}], "-", ".5"}], ")"}]}], 
              "]"}]}], ")"}]}], "-", 
          RowBox[{"DMTORC1", " ", 
           RowBox[{"MTORC1", "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"MTORC2", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "b"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"WMTORC2", "[", "t", "]"}], "-", ".5"}], ")"}]}], 
              "]"}]}], ")"}]}], "-", 
          RowBox[{"DMTORC2", " ", 
           RowBox[{"MTORC2", "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"LKB1", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "b"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"WLKB1", "[", "t", "]"}], "-", ".5"}], ")"}]}], 
              "]"}]}], ")"}]}], "-", 
          RowBox[{"DLKB1", " ", 
           RowBox[{"LKB1", "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"AMPK", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "b"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"WAMPK", "[", "t", "]"}], "-", ".5"}], ")"}]}], 
              "]"}]}], ")"}]}], "-", 
          RowBox[{"DAMPK", " ", 
           RowBox[{"AMPK", "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Glycolysis", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "b"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"WGlycolysis", "[", "t", "]"}], "-", ".5"}], ")"}]}],
               "]"}]}], ")"}]}], "-", 
          RowBox[{"DGlycolysis", " ", 
           RowBox[{"Glycolysis", "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"OXPHOS", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "b"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"WOXPHOS", "[", "t", "]"}], "-", ".5"}], ")"}]}], 
              "]"}]}], ")"}]}], "-", 
          RowBox[{"DOXPHOS", " ", 
           RowBox[{"OXPHOS", "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"AMPATPratio", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "b"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"WAMPATPratio", "[", "t", "]"}], "-", ".5"}], 
                ")"}]}], "]"}]}], ")"}]}], "-", 
          RowBox[{"DAMPATPratio", " ", 
           RowBox[{"AMPATPratio", "[", "t", "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MTORC1", "[", "0", "]"}], "\[Equal]", "MTORC10"}], ",", 
        RowBox[{
         RowBox[{"MTORC2", "[", "0", "]"}], "\[Equal]", "MTORC20"}], ",", " ", 
        RowBox[{
         RowBox[{"LKB1", "[", "0", "]"}], "\[Equal]", "LKB10"}], ",", " ", 
        RowBox[{
         RowBox[{"AMPK", "[", "0", "]"}], "\[Equal]", "AMPK0"}], ",", " ", 
        RowBox[{
         RowBox[{"Glycolysis", "[", "0", "]"}], "\[Equal]", "Glycolysis0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"OXPHOS", "[", "0", "]"}], "\[Equal]", "OXPHOS0"}], ",", " ", 
        RowBox[{
         RowBox[{"AMPATPratio", "[", "0", "]"}], "\[Equal]", 
         "AMPATPratio0"}]}], " ", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MTORC1", "[", "t", "]"}], ",", 
        RowBox[{"MTORC2", "[", "t", "]"}], ",", " ", 
        RowBox[{"LKB1", "[", "t", "]"}], ",", " ", 
        RowBox[{"AMPK", "[", "t", "]"}], ",", " ", 
        RowBox[{"Glycolysis", "[", "t", "]"}], ",", " ", 
        RowBox[{"OXPHOS", "[", "t", "]"}], ",", " ", 
        RowBox[{"AMPATPratio", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.8347016717275677`*^9, 3.834701729807009*^9}, {
  3.834701760213329*^9, 3.8347017760363035`*^9}, {3.8347019152487755`*^9, 
  3.834701926774991*^9}, {3.834702178083743*^9, 3.8347022114126997`*^9}, {
  3.8349596368496637`*^9, 3.834959639926756*^9}, {3.834959677984254*^9, 
  3.8349596796284876`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d436efae-0fa9-4c50-94e5-52956ed23e6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Ploteo", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"P1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Glycolysis", "[", "t", "]"}], ",", 
          RowBox[{"OXPHOS", "[", "t", "]"}], ",", " ", 
          RowBox[{"AMPATPratio", "[", "t", "]"}], ",", " ", 
          RowBox[{"AMPK", "[", "t", "]"}]}], "}"}], " ", "/.", " ", "CORE2"}],
        "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "30"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "  ", 
          RowBox[{
          "\"\<Glycolysis\>\"", ",", "\"\<OXPHOS\>\"", " ", ",", 
           "\"\<AMP/ATP ratio\>\"", " ", ",", " ", "\"\<AMPK\>\""}], " ", 
          "}"}], ",", " ", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05"}], ",", "1.05"}], "}"}]}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Activity levels\>\"", ","}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Time\>\"", ",", "\"\<\>\""}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], " ",
          ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{".02", ",", ".03"}], "}"}], "]"}], ",", 
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", " ", "Darker", ",", 
           "Brown"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{".02", ",", ".04"}], "}"}], "]"}], ",", " ", 
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", " ", "Darker", ",", 
           "Red"}], "}"}]}], " ", "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Bold", ",", " ", "Black", ",", " ", 
         RowBox[{"FontSize", "\[Rule]", " ", "30"}]}], "]"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.834701831420205*^9, 3.8347018440201473`*^9}, {
  3.8347019494710026`*^9, 3.834701950103005*^9}, {3.8347021919459305`*^9, 
  3.834702216496346*^9}, {3.834959646939954*^9, 3.834959662484397*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"3b979803-b26b-4e1b-91b1-7347f268fd95"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.01], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
6P939tHK+dXVLSBdwr/m/wEZrfsG
          "]]}, Annotation[#, "Charting`Private`Tag$7582#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[0.01], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
vt0JJezrG5ymmKaKksa0Jn3CO14l1e9/oIr65LuGD+5RYdHsteK7MlXkmmnj
js2kgrMTb9/1IVUcDpkg+d0l6hOZZ6urq4aRe+TDXtymwuNnT6uXDNWwvbqw
lkZYvy1X9w2oIZenUfAuwntlHopv3amGxmhgOpJK9MfrjBG7A2r4x4Z7RIbw
3+kEmneoGkpKsUo8SaZCpFD8LClCDTszcF0wYUHTqyfmYtTwR0LW8d2EyTHR
VpduqOHg0i6dP7eo4Cl/WTjqoRretjm7z5pwl5NffnaTGlJigsbX3KSCO+2M
rHuLGm4xH3rad4MKv3N8b6p2qCE9IbWmhLDA3MnAwn41rBcQXzxJ2OKq647K
OTUcQo/t7depUFLl0Nctqo7px10XSpOokKxqsH6Dmzoqyh38W5JABXvLxvhy
L3V8VJRaf4ewgNcRfk9fddx7+nNXMOGYx1ECbwPUMVZ0+rk54SDlro2nYtXR
5I6zWXs8FY4rXhKpL1BH20F2Z1bC0tvXpZ5/pY6Gwavdo9eo0HsiS1SmTB0b
E39fbya8L6deLOCdOv6X3PsonbCFvLikYrs6vjucYWdCWEv2jczlf+r4bdJd
L+wqFSa32GVpMGvgD1rBjDfhx0eHZbvYNZDGz9y7j7DcPV55rXUaGMeztEWN
sLD0IcXv0hqoTlU0bI8j+ltyVdVouwYaDoRH6BCuEzXTmU3QwKCbnjL8sVRo
lsxTYLulgf8EVgtXYqjwVUZCeNMdDTyTd9uHTrhfZemPbo4Giuaeca0lvGhY
UHmxVAO5j5hsDyWssF/aimVQA+3lfSKWo6mgdviayYYRDexbyLo9QZh8bFlD
bkID92sutvYQNvHq5Ddf0MBH5cUvywnvvZTQHrVWE+8svVMIJRx6m/kYv7Ym
ngraQVtHOPLuqb0yBpo473m0kpnw1ayebRRTTQwzjZCai6JCSm6Jkv0OTWzu
bIdOwvllpyeTD2hiZWrfTDbh3u7+AKlwTZwWmKSbETYUr4rX/KqJZ3o7nOIj
qTAgK9c72qWJW/7zrLlCOEr1imr2d02M8/iynUq4w9CiRnhUE1vweKQnYX+n
L3+Z/2mixN/wv9sIO1uepoytJ+Hdr43hTIQ1bGSct28goSrHftXFCOL5sKeF
lr2JhBUTIoNThB856zQdEiXh54SoyO+EFz2W3FtkSZh6tj6ngvDNSOLvvi4J
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
WnJyTTBa8dT/ne5dOr+6aoJ8lcH/9/8AwufC3Q==
          "]]}, Annotation[#, "Charting`Private`Tag$7582#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{0.02, 0.03}], 
          Thickness[0.01], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[CompressedData["
1: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
ZgJFuSXr/h+mXfgz
          "]]}, Annotation[#, "Charting`Private`Tag$7582#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{0.02, 0.04}], 
          Thickness[0.01], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwd13c8Vf8bAHBC2bK37L1nRp4nLaNIRTSlsoqQhOpeRChJQ0aSJIn4GiGK
hFSSrMzIzHbt0fI753f/uPf1fp1zz/k8z/P5PJ9zpJzP7Tu9jo6Oro34In+X
ej/VyN5IN3VfXSM+NED+r85CHXdg51zRH9L+e7PaGTrSQHRHywrpE4Wfs9Zu
PoNp29Ql0rsFpq783vYCCktMFkhzTwveWW0vABmtlmnS1x5lXlrWLgIni5oJ
0n/2Gp5evFkCJ/J8R0n7rquznh8tBR/DziHSo4WHNs9uewMv6Of6SB87PSFF
S6kAjsni76Q92CrCly5XwvVAqQ7SP95Yn1torwL2hLovpJP4BU+dZ6oBaubq
B9IHvH44zGm/B4bF3HekuT482+PjVAuL1P4y0nWbvM1mbn4ARomIQtLhAZsN
zr3+CI6Ocdn/z0cTner06CfolaN/Qro49Db/5LZ6CMeKW6S9ux1Zz/h8AUXX
xTDSKrrSa2MpDWCy8UAg6Z/R4/Nu9V+B98qns6QbfR0X5i83wreh7cdJqz8q
9yrkbQLG/Jd7Sd/4LDXmm9UED6QZt5LeKTveM9veDHtaJ8RJp++1dsj3agGZ
VTtW0vRXCpq9mVohJQAX/5H5ei6wRzO5FXQu3eol/eZb0Aea9jdQV5WvJS28
7sfW/z59g2tKA9mk/dW3vfFyaoMq6Ue3SGtFsOVP3WwHLv9re0nHFJ5TyZHt
AE5jRzXSkz9anp593QHfdoVsIG3BvllSdV8nFNc29P4lnLE5OWlitBPiVZgL
STOepuPPpnbBk80TV0mfuH3qlodAN7wL1bMlLTauGja27Ttw35n78YdwkMDt
f5ld38GVuyaVdLvZYoCbTw9U3C4+Qlr3nOO8AnMv/Ihw5SV950G550hKL7wz
9av5TXjmg9Roht4PWLQ9c470noVwZ5f6H7CgWc1LOkz+Wfbc5T7gvHF65y/C
BSadbvs+9oE1x+WWVcL9+9jkC3j7YWbB/yDpje5bBrmP9wN3bULTCmFT6rlU
n6x+WDggvJW0Z9zjo02L/WBqs+7pMuHk7BYRra0D8Pyo7Z8lwqvtBnEz7QPQ
XToVvEj4lTaz0zOlQRDs+Z2wQOb/ZofysUuDIOBpnTxPxjeaucj3ZRCOlbBE
zRGeMwus/CwxBJOzA0dmCec9tLgR6j0Eckd8+WcIe60I2xtWDYFS9/a8acKq
+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
          "]]}, Annotation[#, "Charting`Private`Tag$7582#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Activity levels\"", TraditionalForm], ""}, {
        FormBox["\"Time\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Directive[Bold, 
       GrayLevel[0], FontSize -> 30], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 29.999999387755103`}, {-0.05, 1.05}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Glycolysis\"", "\"OXPHOS\"", "\"AMP/ATP ratio\"", "\"AMPK\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.18, 0.27}], 
                    Thickness[0.09], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.18, 0.27}], 
                    Thickness[0.09], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.18, 0.36}], 
                    Thickness[0.09], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0.18, 0.36}], 
                    Thickness[0.09], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Bold, 
           GrayLevel[0], FontSize -> 30], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.02`", ",", "0.03`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.02`", ",", "0.04`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"Bold", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.834701933953657*^9, 3.834701959806252*^9}, 
   3.8347019965203233`*^9, 3.8349597167194858`*^9, 3.834959849261229*^9, 
   3.834959906502867*^9, 3.8351108793249507`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"6a7029f2-ceae-47bb-b48c-78d25b88a066"]
}, Open  ]]
},
WindowSize->{1904, 981},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d3bef980-81f2-4c70-ab6b-3485834fe0ab"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 158, 4, 56, "Input",ExpressionUUID->"57729b9e-70df-48a8-871b-d42d9a9617a4"],
Cell[719, 26, 3591, 97, 210, "Input",ExpressionUUID->"ab0bf766-5b11-4666-940f-8684376a9c30"],
Cell[4313, 125, 843, 17, 70, "Input",ExpressionUUID->"26a03b30-5208-4172-a64b-762253b98d4f"],
Cell[5159, 144, 864, 17, 70, "Input",ExpressionUUID->"84f09554-2480-4ad4-9b40-8ef067fba070"],
Cell[6026, 163, 933, 17, 70, "Input",ExpressionUUID->"6cb272dd-9a5c-45e2-a1bf-c194146cec76"],
Cell[6962, 182, 5816, 155, 150, "Input",ExpressionUUID->"d436efae-0fa9-4c50-94e5-52956ed23e6f"],
Cell[CellGroupData[{
Cell[12803, 341, 3007, 74, 170, "Input",ExpressionUUID->"3b979803-b26b-4e1b-91b1-7347f268fd95"],
Cell[15813, 417, 93410, 1637, 522, "Output",ExpressionUUID->"6a7029f2-ceae-47bb-b48c-78d25b88a066"]
}, Open  ]]
}
]
*)

